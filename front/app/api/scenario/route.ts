import { NextRequest } from "next/server";
import { randomUUID } from "crypto";
import {
  verifyAuthToken,
  createSuccessResponse,
  createErrorResponse,
} from "@/lib/utils";
import { createScenario } from "./service";

export async function GET(request: NextRequest): Promise<Response> {
  const requestId = randomUUID();
  console.log(`[${requestId}] üöÄ D√©marrage de la cr√©ation du sc√©nario...`);

  // V√©rification du token d'authentification
  if (!verifyAuthToken(request)) {
    console.error(`[${requestId}] ‚ùå Authentification √©chou√©e`);
    return createErrorResponse(
      requestId,
      {
        message: "Non autoris√©",
        name: "AuthenticationError",
      },
      401
    );
  }

  try {
    const result = await createScenario();
    console.log(`[${requestId}] ‚úÖ Op√©ration termin√©e: ${result.message}`);

    return createSuccessResponse(requestId, result);
  } catch (error) {
    console.error(
      `[${requestId}] ‚ùå Erreur lors de la cr√©ation du sc√©nario:`,
      error
    );
    return createErrorResponse(requestId, error);
  }
}
