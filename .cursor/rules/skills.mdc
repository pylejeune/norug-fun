---
description: 
globs: 
alwaysApply: true
---
---
description: Developer skill requirements and technical expectations for contributors
globs:
  - "**"
alwaysApply: true
---

# Developer Expectations

## üß† Core Skills Required

To contribute effectively to `norug.fun`, you are expected to have strong skills in the following:

- **Next.js 14+ (App Router)**: Familiar with `app/` structure, server/client components, middleware, route handlers, `use server` actions, and internationalization.
- **Tailwind CSS**: Comfortable using utility-first CSS, responsive layouts, and working with custom themes.
- **TypeScript**: Write strictly typed code with reusable and composable components.
- **Solana + Anchor (Rust)**: Experience writing secure on-chain programs using Anchor, handling program accounts, instruction context, and IDL generation.
- **Solana Frontend Integration**: Understand how to interact with Solana programs from the frontend using packages like `@solana/web3.js` and wallet adapters.
- **Shadcn**: Familiarity with Shadcn UI components for reusable and modular design.

## üßë‚Äçüíª Code Quality & Practices

- Follow strict **component composition** rules (e.g., colocate small logic units, separate pure UI from hooks).
- Adhere to **Shadcn UI standards** for reusability and styling (`components/ui`).
- Use `use client` and `use server` appropriately to maximize SSR and security.
- Rust programs must use **Anchor best practices**, including:
  - Explicit error handling via `error.rs`
  - Instructions modularized in `instructions/`
  - Centralized `state.rs` for all accounts/data
  - Proper use of `#[derive(Accounts)]` for context enforcement
- Every instruction should have a corresponding **unit test** and deployment scenario under `/tests/`.

## üßöÔ∏è Testing

- **Frontend**: Use Vitest or Playwright for UI testing if needed.
- **Smart Contracts**: Write Anchor tests in TypeScript and include edge case checks.

## üí¨ Code Comments in English

- All code comments must be written in **English**, regardless of the developer's native language.
- This ensures consistency and better collaboration for international contributors.
